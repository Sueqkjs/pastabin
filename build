#!/usr/bin/env node
const fs = require("fs/promises");
const { existsSync } = require("fs");
const { join } = require("path");
const { execSync } = require("child_process");
const args = process.argv.slice(2);
const stdio = ["ignore", process.stdout, process.stderr];

(async () => {
  console.time("build");
  if (existsSync(join(__dirname, "pastabin")))
    await fs.unlink(join(__dirname, "pastabin"));

  execSync("wasm-pack build -t web", {
    cwd: join(__dirname, "lib", "crypto"),
    stdio,
  });

  execSync("npm i", {
    cwd: join(__dirname, "lib", "crypto"),
    stdio,
  });

  execSync("npm i", {
    cwd: join(__dirname, "src", "app"),
    stdio,
  });

  execSync("node esbuild.config.js", {
    cwd: join(__dirname, "src", "app"),
    stdio,
  });

  (await fs.readdir(join(__dirname, "static"))).forEach((v) => {
    if (v.endsWith(".gz") && !v.endsWith(".map.gz")) {
      fs.rename(
        join(__dirname, "static", v),
        join(
          __dirname,
          "static",
          v.replace(v, v.split(".")[0] + "." + v.split(".")[1][0] + "gz")
        )
      );
    }
  });

  execSync(`cargo build ${args.join(" ")}`, {
    cwd: __dirname,
    stdio,
  });

  await fs.copyFile(
    join(__dirname, "lib", "crypto", "pkg", "crypto_bg.wasm"),
    join(__dirname, "static", "crypto_bg.wasm")
  );

  await fs.copyFile(
    join(
      __dirname,
      "target",
      args.includes("--release") ? "release" : "debug",
      "pastabin"
    ),
    join(__dirname, "pastabin")
  );
  console.timeEnd("build");
})();
